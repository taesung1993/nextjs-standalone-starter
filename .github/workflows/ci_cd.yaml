name: Next.js Standalone CI/CD
run-name: ${{ github.actor }} is practicing Next.js Deployment with GitHub Actions
on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  CONTAINER_NAME: nextjs-standalone-starter-container
  ECR_REPOSITORY: nextjs-standalone-starter
  ECS_CLUSTER: nextjs-standalone-starter
  ECS_SERVICE: nextjs-standalone-starter-service
  ECS_DG: DgpECS-nextjs-standalone-starter-nextjs-standalone-starter-service
  ECS_APP: AppECS-nextjs-standalone-starter-nextjs-standalone-starter-service
  ECS_APPSPEC: appspec.yml

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Git clone
        uses: actions/checkout@v4 # 현재 저장소가 될 actions를 떙겨온다.

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{env.AWS_REGION}}

      - name: Build, tag, and push image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.TASK_DEFINITION }} \
          --query taskDefinition > task-definition.json

      - name: Update task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{env.CONTAINER_NAME}}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
          codedeploy-appspec: ${{ env.ECS_APPSPEC }}
          codedeploy-application: ${{ env.ECS_APP }}
          codedeploy-deployment-group: ${{ env.ECS_DG }}
